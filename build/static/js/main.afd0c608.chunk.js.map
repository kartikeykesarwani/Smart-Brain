{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/Logo.js","components/Signin/Signin.js","components/Register/Register.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/Facerecognition/Facerecognition.js","App.js","serviceWorker.js","index.js","components/Logo/brain.png"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","paddingTop","src","brain","alt","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignin","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","id","loadUser","this","htmlFor","type","name","onChange","React","Component","Register","onNameChange","onSubmitSignIn","Rank","entries","ImageLinkForm","onInputChange","onButtonSubmit","placeholder","Facerecognition","imageUrl","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","particlesOptions","particles","number","density","enable","value_area","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","console","log","Object","assign","catch","err","params","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.afd0c608.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n\tif(isSignedIn) {\n        return (\n\t\t\t   <nav style={{ display:'flex', justifyContent:'flex-end'}}>\n\t\t\t    <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\n\t\t\t   </nav> \n  )\n\t} else {\n      return (\n      \t<nav style={{display:'flex' , justifyContent:'flex-end'}}>\n      \t <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\n      \t <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\n      \t</nav>\n      );\n\n\t}\n  \n}\n\nexport default Navigation;","import React from 'react';\nimport Tilt from 'react-tilt';\nimport './Logo.css';\nimport brain from './brain.png';\n\nconst Logo = () => {\n\treturn (\n       <div className='ma4 mt0'>\n        <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 200, width: 200 }} >\n          <div className=\"Tilt-inner pa2\"><img style={{ paddingTop:'3px'}} src={ brain } alt ='logo' /></div>\n        </Tilt>\n       </div> \n    );\n}\n\nexport default Logo;","import React from 'react';\n\nclass Signin extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      signInEmail: '',\n      signInPassword:''\n    }\n  }\n\n\n  onEmailChange = (event) => {\n    this.setState({ signInEmail: event.target.value})\n  }\n\n  onPasswordChange = (event) => {\n    this.setState({ signInPassword: event.target.value })\n  }\n\n  onSubmitSignin = () => {\n    fetch('https://mighty-earth-04737.herokuapp.com/signin',{\n      method:'post',\n      headers: { 'Content-Type' : 'application/json'},\n      body: JSON.stringify({\n        email: this.state.signInEmail,\n        password: this.state.signInPassword\n      })\n    })\n    .then(response => response.json())\n    .then(user => {\n      if(user.id){\n        this.props.loadUser(user)\n        this.props.onRouteChange('home');\n      }\n    })\n\n  }\n  render() {\n    const { onRouteChange } = this.props;\n    return(\n    <article className=\"br3 ba  b--black-10 mv4  w-50-m w-25-l mw5 shadow-5 center\" >\n     <main className=\"pa1 black-80 \">\n        <div className=\"measure\">\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n            <legend className=\"f1 fw6 ph4 mh2\">   Sign In   </legend>\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n              <input \n               className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n               type=\"email\" \n               name=\"email-address\"  \n               id=\"email-address\"\n               onChange= {this.onEmailChange}\n               />\n            </div>\n            <div className=\"mv3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n              <input \n              className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n              type=\"password\" \n              name=\"password\"  \n              id=\"password\"\n              onChange={this.onPasswordChange}\n              />\n            </div>\n          </fieldset>\n          <div className=\"\">\n            <input \n            onClick = {this.onSubmitSignin}\n            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n            type=\"submit\" \n            value=\"Sign in\"\n            />\n          </div>\n          <div className=\"lh-copy mt3\">\n            <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\n          </div>\n        </div>\n      </main>\n      </article>\n\n    );\n\n  }\n}\n\n\nexport default Signin;","import React from 'react';\n\nclass Register extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      email: '',\n      password:'',\n      name: ''\n    }\n  }\n\n\n  onNameChange = (event) => {\n    this.setState({ name: event.target.value})\n  }\n  onEmailChange = (event) => {\n    this.setState({ email: event.target.value })\n  }\n\n\n\n  onPasswordChange = (event) => {\n    this.setState({ password: event.target.value })\n  }\n\n  onSubmitSignIn = () => {\n    fetch('https://mighty-earth-04737.herokuapp.com/register',{\n      method:'post',\n      headers: { 'Content-Type' : 'application/json'},\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n        name: this.state.name\n      })\n    })\n    .then(response => response.json())\n    .then(user => {\n      if(user.id){\n        this.props.loadUser(user)\n        this.props.onRouteChange('home');\n      }\n    })\n  }\n  render() {\n    return(\n    <article className=\"br3 ba  b--black-10 mv4 w-100 w-50-m w-25-l mw5 shadow-5 center\">\n     <main className=\"pa4 black-80\">\n        <div className=\"measure\">\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n            <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Name</label>\n              <input \n               className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n               type=\"text\" \n               name=\"name\"  \n               id=\"name\"\n               onChange= {this.onNameChange}\n               />\n            </div>\n            <div className=\"mv3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n              <input \n              className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n              type=\"email\" \n              name=\"email-address\"  \n              id=\"email-address\"\n              onChange={this.onEmailChange}\n              />\n            </div>\n            <div className=\"mv3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n              <input \n              className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n              type=\"password\" \n              name=\"password\"  \n              id=\"password\"\n              onChange={this.onPasswordChange}\n              />\n            </div>\n          </fieldset>\n          <div className=\"\">\n            <input \n            onClick = {this.onSubmitSignIn}\n            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n            type=\"submit\" \n            value=\"Register\"\n            />\n          </div>\n        </div>\n      </main>\n    </article>\n\n    );\n\n  }\n}\n\n\nexport default Register;","import React from 'react';\n\n\n\nconst Rank = ({ name , entries}) => {\n\treturn (\n       <div>\n        <div className='white f2' >\n         { `${ name } , your current entry count is...`}\n\n        </div> \n        <div className='white f2' > \n         { entries }\n        </div> \n       </div> \n    );\n}\n\nexport default Rank;","import React from 'react';\nimport './ImageLinkForm.css';\n\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\n\treturn (\n       <div>\n        <p className='f2'>\n         { 'This Magic Brain will detect faces in your pictures. Give it a Try!!'}\n        </p>\n        <div className='center'>\n          <div className='form center pa4 br3 shadow-5'>\n            <input className='f4 pa2 w-70 center' type='text' placeholder='Image Link' onChange={onInputChange} />\n            <button className='w-30 grow f4 link ph3 pv2 dib white bg-purple' \n                    onClick = {onButtonSubmit}>Detect</button>\n          </div>\n        </div>\n       </div> \n    );\n}\n\nexport default ImageLinkForm;","import React from 'react';\nimport './Facerecognition.css';\n\n\nconst Facerecognition= ({ imageUrl, box }) => {\n  return (\n  <div className = 'center ma'>\n   <div className= 'absolute mt2'>\n    <img id='inputimage' alt='' src={ imageUrl} width='500px' height='auto' />\n    <div className='bounding-box' style={{top:box.topRow , right: box.rightCol, bottom:box.bottomRow , left: box.leftCol}}></div>\n   </div>\n  </div> \n  );\n}\n\nexport default Facerecognition;","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'; \nimport Facerecognition from './components/Facerecognition/Facerecognition';\nimport './App.css';\n\nconst particlesOptions = {\n                   particles: {\n                     number:{\n                      value:100,\n                       density: {\n                        enable: true,\n                        value_area:850\n                      }\n                    }\n                  \n                }\n            }\n\nconst initialState = {\n      input:'',\n      imageUrl:'' ,\n      box:{},\n      route:'signin',\n      isSignedIn: false,\n      user:{\n        id:'',\n        name:'',\n        email:'',\n        entries:'',\n        joined:''\n}\n}\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n    \n  }\n  loadUser = (data) => {\n    this.setState({user:{\n      id: data.id,\n      name: data.name,\n      email:data.email,\n      entries:data.entries,\n      joined:data.joined\n    }})\n  }\n\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width-(clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input : event.target.value});\n  }\n\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n      fetch('https://mighty-earth-04737.herokuapp.com/imageurl',{\n          method: 'post',\n          headers: { 'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            input: this.state.input\n          })\n       })\n      .then(response => response.json())\n      .then(response => {\n        if(response){\n          fetch('https://mighty-earth-04737.herokuapp.com/image',{\n            method: 'put',\n            headers: { 'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n          .then(response => response.json())\n          .then(count => {\n            console.log(count);\n            this.setState(Object.assign(this.state.user, { entries:count}))\n          })\n\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n    \n  }\n\n  onRouteChange = (route) => {\n    if(route === 'signout'){\n      this.setState( initialState )\n    }else if(route === 'home'){\n      this.setState({isSignedIn: true})\n    }else if(route === 'signin'){\n      this.setState({isSignedIn: false})\n      this.setState( initialState )\n    }\n    this.setState({ route: route});\n  }\n\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n    <div className=\"App\">\n         <Particles className='particles'\n              params={particlesOptions}\n         />\n      <Navigation isSignedIn = {isSignedIn} onRouteChange ={this.onRouteChange} />\n      { route === 'home'\n       ? <div>\n         <Logo />\n        <Rank \n         name={this.state.user.name}\n         entries={this.state.user.entries}\n         />\n        <ImageLinkForm \n          onInputChange={this.onInputChange} \n          onButtonSubmit={this.onButtonSubmit}/>\n        <Facerecognition box={box} imageUrl={imageUrl} />\n        </div>\n        : ( \n            route === 'signin'\n            ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n        )\n     } \n    </div>\n  )\n}\n}\n\n  \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.e0b4264e.png\";"],"sourceRoot":""}